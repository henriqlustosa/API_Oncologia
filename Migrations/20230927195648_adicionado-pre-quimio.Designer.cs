// <auto-generated />
using System;
using BackendOncologia.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendOncologia.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230927195648_adicionado-pre-quimio")]
    partial class adicionadoprequimio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendOncologia.Entities.MedicacaoPreQuimio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.HasKey("Id");

                    b.ToTable("MedicacaoPreQuimio", (string)null);
                });

            modelBuilder.Entity("BackendOncologia.Entities.PreQuimio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cod_Medicacao")
                        .HasColumnType("INT");

                    b.Property<int>("cod_Quimio")
                        .HasColumnType("INT");

                    b.Property<int>("cod_TipoPreQuimio")
                        .HasColumnType("INT");

                    b.Property<int>("cod_Usuario")
                        .HasColumnType("INT");

                    b.Property<int>("cod_ViaDeAdministracao")
                        .HasColumnType("INT");

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<string>("diluicao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("quantidade")
                        .HasColumnType("INT");

                    b.Property<int>("quimio")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<int>("tempoDeInfusao")
                        .HasColumnType("INT");

                    b.Property<string>("unidadeQuantidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("unidadeTempoDeInfusao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Id");

                    b.HasIndex("cod_Medicacao");

                    b.HasIndex("cod_TipoPreQuimio");

                    b.HasIndex("cod_Usuario");

                    b.ToTable("PreQuimio", (string)null);
                });

            modelBuilder.Entity("BackendOncologia.Entities.TipoPreQuimio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.HasKey("Id");

                    b.ToTable("TipoPreQuimio", (string)null);
                });

            modelBuilder.Entity("BackendOncologia.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Permissao")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("BackendOncologia.Entities.ViaDeAdministracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.HasKey("Id");

                    b.ToTable("ViaDeAdministracao", (string)null);
                });

            modelBuilder.Entity("BackendOncologia.Entities.PreQuimio", b =>
                {
                    b.HasOne("BackendOncologia.Entities.MedicacaoPreQuimio", "medicacao")
                        .WithMany("preQuimios")
                        .HasForeignKey("cod_Medicacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendOncologia.Entities.TipoPreQuimio", "tipoPreQuimio")
                        .WithMany("preQuimios")
                        .HasForeignKey("cod_TipoPreQuimio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendOncologia.Entities.Usuario", "usuario")
                        .WithMany("PreQuimios")
                        .HasForeignKey("cod_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendOncologia.Entities.ViaDeAdministracao", "viaDeAdministracao")
                        .WithMany("preQuimios")
                        .HasForeignKey("cod_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medicacao");

                    b.Navigation("tipoPreQuimio");

                    b.Navigation("usuario");

                    b.Navigation("viaDeAdministracao");
                });

            modelBuilder.Entity("BackendOncologia.Entities.MedicacaoPreQuimio", b =>
                {
                    b.Navigation("preQuimios");
                });

            modelBuilder.Entity("BackendOncologia.Entities.TipoPreQuimio", b =>
                {
                    b.Navigation("preQuimios");
                });

            modelBuilder.Entity("BackendOncologia.Entities.Usuario", b =>
                {
                    b.Navigation("PreQuimios");
                });

            modelBuilder.Entity("BackendOncologia.Entities.ViaDeAdministracao", b =>
                {
                    b.Navigation("preQuimios");
                });
#pragma warning restore 612, 618
        }
    }
}
